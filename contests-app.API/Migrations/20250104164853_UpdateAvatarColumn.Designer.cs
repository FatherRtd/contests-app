// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using contests_app.API.Persistence;

#nullable disable

namespace contests_app.API.Migrations
{
    [DbContext(typeof(ContestsDbContext))]
    [Migration("20250104164853_UpdateAvatarColumn")]
    partial class UpdateAvatarColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("contests_app.API.Persistence.Entities.TeamEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("contests_app.API.Persistence.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMentor")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f516eab8-32e9-48ea-9eee-276628b4fe53"),
                            Avatar = "https://material.angular.io/assets/img/examples/shiba1.jpg",
                            IsAdmin = false,
                            IsMentor = true,
                            Login = "mentor",
                            Name = "Mentor",
                            PasswordHash = "$2a$11$vIosaE2NY7sVgKXGN.i7re82uyoGSwXb54KX6ZJJOe.kFzfzvyqdG",
                            SurName = "Mentor"
                        },
                        new
                        {
                            Id = new Guid("b75dcc9e-9605-4a3f-8f0e-024f03f0ae1c"),
                            Avatar = "https://material.angular.io/assets/img/examples/shiba1.jpg",
                            IsAdmin = true,
                            IsMentor = false,
                            Login = "admin",
                            Name = "Admin",
                            PasswordHash = "$2a$11$SQE779EseVoOL6XTAYZ0BuCZY56Cz3xe7FwhBHkn0VJTrcrdSYlNK",
                            SurName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("930a6a70-73ce-40f4-9ada-b7bdc91e4730"),
                            Avatar = "https://material.angular.io/assets/img/examples/shiba1.jpg",
                            IsAdmin = false,
                            IsMentor = false,
                            Login = "user",
                            Name = "User",
                            PasswordHash = "$2a$11$6gZzKPLL6r5smZ7JcZA4MeS982pU/9.zQCMdLO3BFhIYiazXd3yo6",
                            SurName = "User"
                        });
                });

            modelBuilder.Entity("contests_app.API.Persistence.Entities.TeamEntity", b =>
                {
                    b.HasOne("contests_app.API.Persistence.Entities.UserEntity", "Owner")
                        .WithOne("OwnedTeam")
                        .HasForeignKey("contests_app.API.Persistence.Entities.TeamEntity", "OwnerId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("contests_app.API.Persistence.Entities.UserEntity", b =>
                {
                    b.HasOne("contests_app.API.Persistence.Entities.TeamEntity", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Team");
                });

            modelBuilder.Entity("contests_app.API.Persistence.Entities.TeamEntity", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("contests_app.API.Persistence.Entities.UserEntity", b =>
                {
                    b.Navigation("OwnedTeam")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
